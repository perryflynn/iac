---
- name: Configure my retired X230 Thinkpad
  hosts:
    - retired

  vars:
    use_handlers: 'true'
    use_reboot: 'false'

  post_tasks:

    - name: Disable automatic ansible apply service
      systemd_service:
        name: perrys-ansible-apply
        enabled: false

    - name: Trigger handlers
      ansible.builtin.meta: flush_handlers

    - name: Reboot
      shell:
        executable: /usr/bin/bash
        cmd: reboot
      when: use_reboot | bool

  tasks:

    - name: Install Swapfile
      include_role:
        name: swapfilesetup
      vars:
        swapsizegb: 8
        swappath: /swapfile

    - name: Install user account
      block:

        - name: Set ssh keys for root account
          authorized_key:
            user: root
            key: "{{rootsshkeys|join('\n')}}"
            exclusive: true

        - name: Create sudo group
          group:
            name: sudo
            system: true

        - name: Install sudo
          package:
            name: sudo

        - name: Enable sudo group in sudoers
          lineinfile:
            path: /etc/sudoers
            state: present
            regexp: '^[# ]+%sudo '
            line: '%sudo ALL=(ALL:ALL) ALL'
            validate: /usr/sbin/visudo -cf %s

        - name: Install user group
          group:
            name: "{{username}}"

        - name: Install user
          user:
            append: true
            create_home: true
            group: "{{username}}"
            groups: "{{ [ username ] + usergroups }}"
            home: "/home/{{username}}"
            name: "{{username}}"
            password: "{{userpassword}}"
            shell: /usr/bin/bash
            update_password: on_create
          register: useraccount

        - name: Set ssh keys for user account
          authorized_key:
            user: "{{username}}"
            key: "{{usersshkeys|join('\n')}}"
            exclusive: true

    - name: Shell Tools
      block:

        - name: Install shell tools
          package:
            name:
              - vim
              - htop
              - curl
              - mc
              - screen
              - git
              - ncdu
              - wget
              - less
              - neofetch

        - name: Create vimrc
          copy:
            dest: /root/.vimrc
            owner: root
            group: root
            mode: u=rw,go=-
            content: |
              set background=dark
              syntax on
              set mouse=

    - name: Install X11
      include_role:
        name: xorgsetup
      vars:
        xorg_video_driver: "{{ 'vmware' if ansible_product_name == 'VirtualBox' else 'intel' }}"
        xorg_handle_lightdm_restart: "{{use_handlers|bool}}"

    - name: Install XFCE
      include_role:
        name: xfcesetup

    - name: Install Bluetooth
      include_role:
        name: bluetoothsetup

    - name: Install Pulseaudio
      include_role:
        name: pulseaudiosetup

    - name: Install NetworkManager
      include_role:
        name: networkmanagersetup

    - name: Desktop Tools
      block:

        - name: Install Desktop Tools
          package:
            name:
              - firefox
              - code
              - element-desktop
              - keepass
              - bitwarden
              - gimp
              - vlc
              - virt-viewer
              - nextcloud-client

    - name: XFCE Desktop configuration
      block:

        - name: Check if xfce4-sesion is active
          shell:
            executable: /usr/bin/bash
            cmd: |
              if ( pgrep -U 1000 -x xfce4-session > /dev/null 2>&1 )
              then
                  exit 98
              fi
              exit 99
          changed_when: False
          failed_when: xfcestatus.rc not in [ 98, 99 ]
          register: xfcestatus

        - name: Configure XFCE
          shell:
            executable: /usr/bin/bash
            cmd: |
              value=$(xfconf-query --channel "{{item.c}}" --property "{{item.p}}" 2> /dev/null)
              result=$?

              if [ $result -ne 0 ] || [ ! "$value" == "{{item.v}}" ]
              then
                  xfconf-query --channel "{{item.c}}" --property "{{item.p}}" --create --type "{{item.t}}" --set "{{item.v}}"
                  exit 98
              fi

              exit 99
          become: true
          become_user: christian
          environment:
            DISPLAY: :0.0
            DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/{{useraccount.uid}}/bus"
          loop:
            - { c: keyboard-layout, p: /Default/XkbDisable, t: bool, v: 'false' }
            - { c: keyboard-layout, p: /Default/XkbLayout, t: string, v: 'de' }
            - { c: keyboard-layout, p: /Default/XkbVariant, t: string, v: 'deadactute' }
            - { c: xfce4-session, p: /shutdown/LockScreen, t: bool, v: 'true' }
            - { c: xfce4-power-manager, p: /xfce4-power-manager/lock-screen-suspend-hibernate, t: bool, v: 'true' }
            - { c: xfce4-session, p: /general/SaveOnExit, t: bool, v: 'false' }
          when: xfcestatus.rc == 98
          register: xfconfresult
          changed_when: xfconfresult.rc == 98
          failed_when: xfconfresult.rc not in [ 98, 99 ]
