---
# roles/xfceconfig/tasks/main.yml

- name: Ensure parameters
  assert:
    that:
      - ansible_distribution == 'Archlinux'
      - useraccount_name is defined
      - useraccount_uid is defined

- name: Install jq
  package:
    name: jq

- name: Configure XFCE
  shell:
    executable: /usr/bin/bash
    cmd: |
      value=$(xfconf-query --channel "{{item.c}}" --property "{{item.p}}" 2> /dev/null)
      result=$?

      if [ $result -ne 0 ] || [ ! "$value" == "{{item.v}}" ]
      then
          xfconf-query --channel "{{item.c}}" --property "{{item.p}}" --create --type "{{item.t}}" --set "{{item.v}}"
          exit 98
      fi

      exit 99
  become: true
  become_user: "{{useraccount_name}}"
  environment:
    DISPLAY: "{{x11desktop}}"
    DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/{{useraccount_uid}}/bus"
  loop: "{{xfceparameters}}"
  register: xfconfresult
  changed_when: xfconfresult.rc == 98
  failed_when: xfconfresult.rc not in [ 98, 99 ]

- name: Find all monitors
  shell:
    executable: /usr/bin/bash
    cmd: |
      xrandr --listmonitors | \
          grep -P ': [+*]{1,2}[^\s]+' | \
          awk '{print $1":"$4}' | \
          jq --raw-input -c -M --slurp '[ split("\n") | .[] | select(. != "") ] | map(. | split("::") | { "screen": .[0], "monitor": .[1] })'
  become: true
  become_user: "{{useraccount_name}}"
  environment:
    DISPLAY: "{{x11desktop}}"
    DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/{{useraccount_uid}}/bus"
  register: screens

- name: Create monitor settings
  set_fact:
    newxfcemonitorsettings: "{{ (xfcemonitorsettings | default([])) + [ (item.0 | combine({ 'p': (item.0.p | replace('SCREENNUM', item.1.screen) | replace('MONITORNAME', item.1.monitor)) })) ] }}"
  with_subelements:
    - "{{xfcemonitorsettings}}"
    - "{{screens.stdout|from_json}}"

- debug:
    var: newxfcemonitorsettings

- fail:
